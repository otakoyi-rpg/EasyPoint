@use 'sass:math';

@function strip-unit($value) {
	@return math.div($value, $value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;
			@media screen and (min-width: $min-vw) {
				font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} *
				((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	}
}

@mixin fluid-size($name, $min-vw, $max-vw, $min-size, $max-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-size);
	$u4: unit($max-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			#{$name}: $min-size;
			@media screen and (min-width: $min-vw) {
				#{$name}: calc(#{$min-size} + #{strip-unit($max-size - $min-size)} *
				((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
			@media screen and (min-width: $max-vw) {
				#{$name}: $max-size;
			}
		}
	}
}

@mixin response($prefix, $media) {
	@media only screen and ($prefix+-width: $media+px) {
		@content;
	}
}

$mob-mini: 360;
$mob: 576;
$mob-tab: 720;
$tab: 960;
$tab-des: 1140;
$des: 1400;
$slider: 1500;

@mixin mob-mini() {
	@include response(max, $mob-mini) {
		@content;
	}
}
@mixin mob() {
	@include response(max, $mob) {
		@content;
	}
}
@mixin mob-tab() {
	@include response(max, $mob-tab) {
		@content;
	}
}
@mixin tab() {
	@include response(max, $tab) {
		@content;
	}
}
@mixin tab-des() {
	@include response(max, $tab-des) {
		@content;
	}
}
@mixin des() {
	@include response(max, $des) {
		@content;
	}
}
